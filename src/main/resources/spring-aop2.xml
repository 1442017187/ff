<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--1. 把两个类交给spring托管： 目标类和增强类-->
    <bean id="us" class="com.itheima.service.impl.UserServiceImpl"/>
    <bean id="myAdvice" class="com.itheima.aop.MyAdvice"/>


    <!--2. 配置aop-->
    <aop:config>
        <aop:aspect ref="myAdvice">
            <!--//通知的类型： 前置通知，在目标方法之前先执行增强的方法-->
            <aop:before method="print" pointcut="execution(public void com.itheima.service.impl.UserServiceImpl.add())"/>

            <!--//通知的类型： 后置通知，在目标方法之后执行增强的方法-->
            <aop:after-returning method="print" pointcut="execution(public void com.itheima.service.impl.UserServiceImpl.add())"/>


            <!--//通知的类型： 异常通知，目标方法出现异常，才会执行增强方法。catch-->
            <!--<aop:after-throwing method="print" pointcut="execution(public void com.itheima.service.impl.UserServiceImpl.add())"/>-->

            <!--//通知的类型： 最终通知，不管有没有异常，都会执行增强方法。finally-->
            <!--<aop:after method="print" pointcut="execution(public void com.itheima.service.impl.UserServiceImpl.add())"/>-->

            <!--//通知的类型： 环绕增强，目标方法的前后都增强。-->
            <!--<aop:around method="around" pointcut="execution(public void com.itheima.service.impl.UserServiceImpl.add())"/>
-->
        </aop:aspect>
    </aop:config>
</beans>